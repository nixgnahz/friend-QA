<style lang="less">
  Page{
    background: #ffdd2b;
    position: absolute;
    width: 100%;
    min-height: 100%;
  }
  .people {
    width: 480rpx;
    height: 480rpx;
    margin: -100rpx auto 0px;
    background-size: 100% 100%;
    background-image: url(http://wx.11babay.cn/uploads/Q/Qdh4nAHglce5Bkn7PTKf/f/a/c/6/5c04d385049ae.png);
  }
  .container {
    width: 90%;
    height: 850rpx;
    margin-top: -80rpx;
    margin-left: 5%;
    background: #fff;
    border-radius: 10px 10px 10px 10px;
  }
  .item {
    display: flex;
    align-items: center;
    flex-direction: row;
    justify-content: space-between;
    padding: 20rpx 0px;
    .avatar {
      width: 90rpx;
      height: 90rpx;
      border-radius: 50%;
      background-size: cover;
    }
    .name {
      width: 300rpx;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    .time {
      font-size: 24rpx;
      color: #888;
      margin-top: 10rpx;
    }
    .comment {
      font-size: 24rpx;
      color: #888;
      margin-top: 10rpx;
    }
  }
  .empty {
    height: 200rpx;
    line-height: 200rpx;
    text-align: center;
    font-size: 26rpx;
  }
  .new {
    width: 95%;
    height: 60rpx;
    text-align: right;
    margin: 50rpx auto 0rpx;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    view, navigator {
      font-size: 30rpx;
      padding: 10rpx 30rpx;
      border-radius: 40px;
      color: #fff;
    }
    .rePlay {
      background: #ff0005;
    }
    .show {
      background: #000;
    }
  }
  .mask {
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.7);
    z-index: 120;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row;
  }
  .answerContent {
    width: 85%;
    background: #fff;
    margin: 0 auto;
    border-radius: 10px;
    position: relative;
    z-index: 1000;
    .close {
      width: 70rpx;
      height: 70rpx;
      position: absolute;
      top: -70rpx;
      right: 0px;
      image {
        width: 70rpx;
        height: 70rpx;
      }
    }
    .title {
      height: 50px;
      line-height: 50px;
      width: 100%;
      text-align: center;
      background: #fede2b;
      border-radius: 10px 10px 0 0;
      font-size: 14px;
    }
    .info {
      height: 80rpx;
      line-height: 80rpx;
      margin: 0px 10rpx;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      view {
        flex: 1;
        font-size: 26rpx;
        text-align: center;
      }
    }
    .answeritems {
      width: 100%;
      height: 750rpx;
      overflow: scroll;
      .ansitems {
        width: 90%;
        margin: 25rpx auto;
        font-size: 30rpx;
        border-bottom: 1px dashed #888;
        &:last-of-type {
          border-bottom: 0;
        }
        .item_ans {
          color: red;
          margin: 15rpx 0px;
        }
      }
    }
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import { login, setUserInfo } from '@/api/login.js'

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/setQus',
        'pages/answer',
        'pages/share',
        'pages/wallet',
        'pages/ansRecord',
        'pages/qusRecord'
      ],
      window: {
        'navigationBarTitleText': '好友问答',
        'navigationBarBackgroundColor': '#ffdd2b',
        'navigationBarTextStyle': 'white'
      }
    }

    constructor () {
      super()
      this.use('promisify')
    }

    globalData = {
      token: 'jyttq1510637876',
      commitId: '22499',
      userInfo: {},
      session: '',
      openid: ''
    }

    async getUserInfo () {
      const data = await wepy.getStorageSync('login')
      if (!data) {
        await this.getRemoteUserInfo()
      } else {
        this.globalData.session = data.session
        this.globalData.openid = data.openid
        this.globalData.userInfo = data.userInfo
      }
    }

    async getRemoteUserInfo () {
      const { code } = await wepy.login()
      const { data } = await login({ token: this.globalData.token, code: code })
      this.globalData.session = data.session_3rd
      this.globalData.openid = data.openid
      this.globalData.userInfo = data.userinfo
      this.setLocalUserInfo()
    }

    setLocalUserInfo () {
      wepy.setStorageSync('login', {
        session: this.globalData.session,
        openid: this.globalData.openid,
        userInfo: this.globalData.userInfo
      })
    }

    async setUserInfo (res) {
      const { data } = await setUserInfo({ session_3rd: this.globalData.session, encrypted: res.encryptedData, iv: res.iv })
      this.globalData.userInfo = data
      this.setLocalUserInfo()
    }
  }
</script>
